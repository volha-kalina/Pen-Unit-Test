package org.lab;

import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.testng.Assert.*;

public class PenTest {
    private final ByteArrayOutputStream outputStreamCaptor = new ByteArrayOutputStream();
    Pen pen1;
    Pen pen2;
    Pen pen3;
    Pen pen4;
    Pen pen5;
    Pen pen6;
    Pen pen7;
    Pen pen8;
    Pen pen9;
    Pen pen10;
    Pen pen11;
    String colorRed = "RED";

    @BeforeTest
    public void setPen() {
        int inkContainerValueNegative = -1;
        int inkContainerValueOne = 1;
        double sizeLetterOne = 1;
        int inkContainerValueTwo = 2;
        double sizeLetterOneAndHalf = 1.5;
        double sizeLetterTwo = 2;
        int inkContainerValueZero = 0;
        int inkContainerValueThree = 3;
        double sizeLetterZero = 0;
        int inkContainerValueFive = 5;
        int inkContainerValueTen = 10;
        double sizeLetterSix = 6;
        pen1 = new Pen(inkContainerValueNegative);
        pen2 = new Pen(inkContainerValueOne, sizeLetterOne);
        pen3 = new Pen(inkContainerValueTwo, sizeLetterOneAndHalf);
        pen4 = new Pen(inkContainerValueTwo, sizeLetterTwo);
        pen5 = new Pen(inkContainerValueZero);
        pen6 = new Pen(inkContainerValueThree, sizeLetterZero);
        pen7 = new Pen(inkContainerValueThree, sizeLetterZero, colorRed);
        pen8 = new Pen(inkContainerValueFive, sizeLetterTwo);
        pen9 = new Pen(inkContainerValueFive, sizeLetterSix);
        pen10 = new Pen(inkContainerValueTen, sizeLetterTwo);
        pen11 = new Pen(inkContainerValueFive);
        // for doSthElse check
        System.setOut(new PrintStream(outputStreamCaptor));
    }

    //can not check fields and constructors as there are no setters

    //positive checks
    @Test
    public void testEmptyStringReturnedIfInkLessZero() {
        String actualResult = pen1.write("word");
        assertEquals(actualResult, "");
    }

    @Test
    public void testEmptyStringReturnedIfInkZero() {
        String actualResult = pen5.write("word");
        assertEquals(actualResult, "");
    }

    @Test
    public void testWordReturnedIfWordSizeEqualInkContainer() {
        String word = "w";
        String actualResult = pen2.write(word);
        //can not get/check inkContainerValue, only via isWork method, no getter
        assertEquals(actualResult, word);
    }

    @Test
    public void testWordReturnedIfWordSizeLessInkContainer() {
        String word = "w";
        String actualResultWord = pen3.write(word);
        //can not get/check inkContainerValue, only via isWork method, no getter
        assertEquals(actualResultWord, word);
    }

    @Test
    public void testPartOfWordReturnedIfWordSizeMoreInkContainer() {
        String word = "wo";
        String actualResultWord = pen4.write(word);
        //can not get/check inkContainerValue, only via isWork method, no getter
        assertEquals(actualResultWord, word);
        //strange case as with the following params the whole word is returned anyway
    }

    @Test
    public void testIsWorkMethodSeparatelyForFalse() {
        Boolean actualResultWork = pen1.isWork();
        assertFalse(actualResultWork);
    }

    @Test
    public void testIsWorkMethodSeparatelyForTrue() {
        Boolean actualResultWork = pen11.isWork();
        assertTrue(actualResultWork);
    }

    @Test
    public void testDoSthElseMethod() {
        pen7.doSomethingElse();
        assertEquals(outputStreamCaptor.toString().trim(), colorRed);
    }

    @Test
    public void testGetColorMethod() {
        String actualResult = pen7.getColor();
        assertEquals(actualResult, colorRed);
    }

    //negative checks

    @Test
    public void testSizeLetterParamZero() {
        String actualResult = pen8.write("word");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResult, "");
        // 1 check should be added on sizeLetter <= 0 --> Bug
    }

    @Test
    public void testWordParamEmptyString() {
        String actualResult = pen9.write("");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResult, "");
    }

    @Test
    public void testWordParamNull() {
        String actualResult = pen10.write(null);
        //is not able to get/check inkContainerValue, only via isWork method, no getter
        assertEquals(actualResult, "error");
    }

    @AfterTest
    public void deletePen() {
        pen1 = null;
        pen2 = null;
        pen3 = null;
        pen4 = null;
        pen5 = null;
        pen6 = null;
        pen7 = null;
        pen8 = null;
        pen9 = null;
        pen10 = null;
    }
}
