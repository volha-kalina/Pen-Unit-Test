package org.lab;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import static org.testng.Assert.assertEquals;

public class PenTest {
    Pen pen1;
    Pen pen2;
    Pen pen3;
    Pen pen4;
    Pen pen5;
    Pen pen6;
    Pen pen7;
    Pen pen8;

    @BeforeMethod
    public void setPen() {
        int inkContainerValue1 = -1;
        int inkContainerValue2 = 1;
        double sizeLetter2 = 1;
        int inkContainerValue3 = 2;
        double sizeLetter3 = 1.5;
        int inkContainerValue4 = 2;
        double sizeLetter4 = 2;
        int inkContainerValue5 = 0;
        int inkContainerValue6 = 3;
        double sizeLetter6 = 0;
        int inkContainerValue7 = 3;
        double sizeLetter7 = 0;
        String color7 = "RED";
        int inkContainerValue8 = 5;
        pen1 = new Pen(inkContainerValue1);
        pen2 = new Pen(inkContainerValue2, sizeLetter2);
        pen3 = new Pen(inkContainerValue3, sizeLetter3);
        pen4 = new Pen(inkContainerValue4, sizeLetter4);
        pen5 = new Pen(inkContainerValue5);
        pen6 = new Pen(inkContainerValue6, sizeLetter6);
        pen7 = new Pen(inkContainerValue7, sizeLetter7, color7);
        pen8 = new Pen(inkContainerValue8);
    }

    //can not check fields and constructors as there are no setters --> Bug

    //positive checks
    @Test
    public void testEmptyStringReturnedIfInkLessZero() {
        String actualResult = pen1.write("word");
        assertEquals(actualResult, "");
    }

    @Test
    public void testEmptyStringReturnedIfInkZero() {
        String actualResult = pen5.write("word");
        assertEquals(actualResult, "");
    }

    @Test
    public void testWordReturnedIfWordSizeEqualInkContainer() {
        String actualResult = pen2.write("w");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResult, "w");
    }

    @Test
    public void testWordReturnedIfWordSizeLessInkContainer() {
        String actualResultWord = pen3.write("w");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResultWord, "w");
    }

    @Test
    public void testPartOfWordReturnedIfWordSizeMoreInkContainer() {
        String actualResultWord = pen4.write("wo");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResultWord, "wo");
        //strange case as with the following params the whole word is returned anyway
    }

    //??? should I write a check via isWork method for inkContainerValue -= sizeOfWord; and inkContainerValue = 0;

    /*@Test
    public void testGetColorMethod() {
        String actualResult = pen7.getColor();
        assertEquals(actualResult, "RED");
    }*/

    //negative checks
    /*@Test
    public void testSizeLetterParamZero() {
        String actualResult = pen6.write("word");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResult, "");
        // 1 check should be added on sizeLetter <= 0 --> Bug
    }*/

    @Test
    public void testWordParamEmptyString() {
        String actualResult = pen6.write("");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResult, "");
    }

    //?????????????? return "word"
    @Test
    public void testWriteMethodWithNoSizeParamSent() {
        String actualResult = pen8.write("word");
        //can not get/check inkContainerValue, only via isWork method, no getter --> Bug
        assertEquals(actualResult, "error");
    }

    @AfterMethod
    public void deletePen() {
        pen1 = null;
        pen2 = null;
        pen3 = null;
        pen4 = null;
        pen5 = null;
        pen6 = null;
        pen7 = null;
        pen8 = null;
    }
}
